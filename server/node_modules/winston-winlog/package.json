{
  "name": "winston-winlog",
  "private": false,
  "version": "0.2.1",
  "description": "Windows Event Log logger for Winston",
  "keywords": [
    "windows",
    "services",
    "log",
    "logging",
    "logger",
    "winston"
  ],
  "homepage": "https://github.com/jfromaniello/winlog",
  "author": {
    "name": "Jose Fernando Romaniello",
    "email": "jfromaniello@gmail.com",
    "url": "http://joseoncode.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jfromaniello/winlog.git"
  },
  "dependencies": {
    "windows-eventlog": "1.0.0"
  },
  "main": "./lib/eventlog",
  "os": [
    "win32"
  ],
  "readme": "\n# Windows Log transport for Winston\n\n  Windows Event Log logger for node.js [Winston](https://github.com/flatiron/winston) module.\n\n## Installation\n\n    $ npm install winston-winlog\n    $ npm install winston\n\n\n## Usage\n\nConfigure :\n\n```js\n  var winston = require('winston'),\n      winlog = require(\"winston-winlog\");\n\n  winston.add(winlog.EventLog, { source: 'myapp' });\n  winston.setLevels(winlog.config.levels);\n```\n\nThen you can do:\n\n```bash\n  winston.info(\"this is an info message\");\n  winston.warning(\"this is an warning message\");\n  winston.error(\"this is an error message\");\n```\n\nAnd you will see\n\n![2012-04-07_1148.png](http://joseoncodecom.ipage.com/wp-content/uploads/images/2012-04-07_1148.png)\n\n### Custom event log\n\nWhen adding the transport you can define a custom event log as follows:\n\n```js\n  winston.add(winlog.EventLog, { source: 'myapp', eventLog: 'MyCustomEventLog' });\n```\n\nThen you will find your logs under \"Applications and Services Logs\"\n\n![2012-04-20_0904.png](http://joseoncodecom.ipage.com/wp-content/uploads/images/2012-04-20_0904.png)\n\n## How it works\n\nThis transport uses the module [windows-eventlog](http://jfromaniello.github.com/windowseventlogjs/) to log events. \n\nIn order to write entries to the eventlog your application has to run with an elevated account: ie administrator or system account. \n\nThe transport will do nothing (*doesn't throw!*) if you run it on a platform other than win32.\n\n## Esta bueno, pero...\n\nThe only reason to use this adapter and not windows-eventlog directly is if you are working on a multi-platform project or you are already using winston.\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2012 Jose Romaniello &lt;jfromaniello@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/jfromaniello/winlog/issues"
  },
  "_id": "winston-winlog@0.2.1",
  "_from": "winston-winlog@0.2.1"
}
